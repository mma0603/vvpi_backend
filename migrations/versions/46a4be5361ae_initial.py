"""initial

Revision ID: 46a4be5361ae
Revises: 
Create Date: 2022-11-29 15:15:56.533203

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '46a4be5361ae'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('place',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=10), nullable=False),
    sa.Column('rent_cost', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_place_id'), 'place', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=64), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('vehicle',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('license_plate', sa.String(length=10), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_plate')
    )
    op.create_index(op.f('ix_vehicle_id'), 'vehicle', ['id'], unique=False)
    op.create_index(op.f('ix_vehicle_user_id'), 'vehicle', ['user_id'], unique=False)
    op.create_table('rent',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
    sa.Column('place_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('vehicle_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), server_default=sa.FetchedValue(), nullable=False),
    sa.ForeignKeyConstraint(['place_id'], ['place.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rent_id'), 'rent', ['id'], unique=False)
    op.create_index(op.f('ix_rent_place_id'), 'rent', ['place_id'], unique=False)
    op.create_index(op.f('ix_rent_vehicle_id'), 'rent', ['vehicle_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rent_vehicle_id'), table_name='rent')
    op.drop_index(op.f('ix_rent_place_id'), table_name='rent')
    op.drop_index(op.f('ix_rent_id'), table_name='rent')
    op.drop_table('rent')
    op.drop_index(op.f('ix_vehicle_user_id'), table_name='vehicle')
    op.drop_index(op.f('ix_vehicle_id'), table_name='vehicle')
    op.drop_table('vehicle')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_place_id'), table_name='place')
    op.drop_table('place')
    # ### end Alembic commands ###
